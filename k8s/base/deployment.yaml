apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-classifier
  namespace: image-classifier
  labels:
    app: image-classifier
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: image-classifier
  template:
    metadata:
      labels:
        app: image-classifier
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: image-classifier
        image: athtech-scalable-image-classifier-image-classifier:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
          name: metrics
          protocol: TCP
        env:
        - name: PYTHONPATH
          valueFrom:
            configMapKeyRef:
              name: image-classifier-config
              key: PYTHONPATH
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: image-classifier-config
              key: PYTHONUNBUFFERED
        - name: PYTHONDONTWRITEBYTECODE
          valueFrom:
            configMapKeyRef:
              name: image-classifier-config
              key: PYTHONDONTWRITEBYTECODE
        - name: MODEL_NAME
          valueFrom:
            configMapKeyRef:
              name: image-classifier-config
              key: MODEL_NAME
        - name: DEVICE
          valueFrom:
            configMapKeyRef:
              name: image-classifier-config
              key: DEVICE
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: image-classifier-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: image-classifier-config
              key: API_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: image-classifier-config
              key: LOG_LEVEL
        - name: OMP_NUM_THREADS
          value: "4"
        - name: MKL_NUM_THREADS
          value: "4"
        - name: TORCH_NUM_THREADS
          value: "4"
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs-volume
        emptyDir: {}
